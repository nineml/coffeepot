name: build-pot
on: push

jobs:
  check_branch:
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.check_step.outputs.branch }}
      reponame: ${{ steps.check_step.outputs.reponame }}
      tag: ${{ steps.check_step.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get branch name, etc.
        id: check_step
        run: |
          raw=${{ github.repository }}
          reponame=${raw##*/}
          echo "reponame=$reponame" >> $GITHUB_OUTPUT
          raw=$(git branch -r --contains ${{ github.ref }})
          branch=${raw##*/}
          echo "branch=$branch" >> $GITHUB_OUTPUT
          tag=""
          if [ ${{ github.ref_type }} = "tag" ]; then
            tag=${{ github.ref_name }}
            echo "Running in $reponame on $branch for $tag"
          else
            echo "Running in $reponame on $branch"
          fi
          echo "tag=$tag" >> $GITHUB_OUTPUT

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: check_branch
    env:
      HAVE_ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN != '' }}
      HAVE_GPGKEYURI: ${{ secrets.ACCESS_TOKEN != '' && secrets.GPGKEYURI != '' }}
      HAVE_SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY != '' }}
      CAN_PUBLISH: ${{ secrets.ACCESS_TOKEN != '' && secrets.GPGKEYURI != '' && secrets.SSH_PRIVATE_KEY != '' }}
      CIWORKFLOW: yes
      CI_SHA1: ${{ github.sha }}
      CI_BUILD_NUM: ${{ github.run_number }}
      CI_PROJECT_USERNAME: ${{ github.repository_owner }}
      CI_PROJECT_REPONAME: ${{ needs.check_branch.outputs.reponame }}
      CI_BRANCH: ${{ needs.check_branch.outputs.branch }}
      CI_TAG: ${{ needs.check_branch.outputs.tag }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup SSH key
        if: ${{ env.HAVE_SSH_PRIVATE_KEY == 'true' }}
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Checkout
        uses: actions/checkout@v3

      - name: Build and test
        run: |
          git submodule init
          git submodule update
          ./gradlew dist website

      - name: Deploy main to gh-pages
        uses: JamesIves/github-pages-deploy-action@v4
        if: ${{ env.CAN_PUBLISH == 'true' && env.CI_BRANCH == 'main' }}
        with:
          folder: build/website
          token: ${{ secrets.ACCESS_TOKEN }}
          branch: gh-pages
          target-folder: /

      - name: Publish release
        uses: softprops/action-gh-release@v1
        if: ${{ env.CAN_PUBLISH == 'true' && env.CI_BRANCH == 'main' && env.CI_TAG != '' }}
        with:
          draft: false
          prerelease: false
          fail_on_unmatched_files: true
          files: |
            build/distributions/coffeepot-${{ env.CI_TAG }}.zip

      - name: Publish to Sonatype
        if: ${{ env.CAN_PUBLISH == 'true' && env.CI_BRANCH == 'main' && env.CI_TAG != '' }}
        run: |
          curl -s -o secret.gpg ${{ secrets.GPGKEYURI }}
          ./gradlew -PsonatypeUsername=${{ secrets.SONATYPEUSER }} \
                  -PsonatypePassword="${{ secrets.SONATYPEPASS }}" \
                  -Psigning.keyId="${{ secrets.SIGNKEY }}" \
                  -Psigning.password="${{ secrets.SIGNPSW }}" \
                  -Psigning.secretKeyRingFile=./secret.gpg \
                  publish
          rm -f secret.gpg
